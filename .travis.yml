sudo: required
addons:
  apt:
    update: true
    packages:
    - docker-ce
services:
- docker
script:
- export DOCKER_CLI_EXPERIMENTAL=enabled
- source sha_function.sh
- alpine_arm_sha=$(get_manifest_sha "vmnet8/alpine:latest" "arm")
- echo $alpine_arm_sha
- nginx_arm_sha=$(get_manifest_sha "vmnet8/nginx:latest" "arm")
- echo $nginx_arm_sha
#- flag_arm=$(is_base "vmnet8/alpine@"$alpine_arm_sha "vmnet8/alpine@"$alpine_arm_sha "vmnet8/nginx@"$nginx_arm_sha "vmnet8/nginx@"$nginx_arm_sha)
- flag_arm=$(is_base "vmnet8/alpine@"$alpine_arm_sha "vmnet8/nginx@"$nginx_arm_sha )
- echo $flag_arm
#- flag_alpine=$(is_base "vmnet8/alpine:latest" "arm" "vmnet8/nginx:latest" "arm")
- alpine_amd64_sha=$(get_manifest_sha "vmnet8/alpine:latest" "amd64")
- echo $alpine_amd64_sha
- nginx_amd64_sha=$(get_manifest_sha "vmnet8/nginx:latest" "amd64")
- echo $nginx_amd64_sha
#- flag_amd64=$(is_base "vmnet8/alpine@"$alpine_amd64_sha "vmnet8/alpine@"$alpine_amd64_sha "vmnet8/nginx@"$nginx_amd64_sha "vmnet8/nginx@"$nginx_amd64_sha)
- flag_amd64=$(is_base "vmnet8/alpine@"$alpine_amd64_sha "vmnet8/nginx@"$nginx_amd64_sha )
- echo $flag_amd64
#- flag_amd64=$(is_base "vmnet8/alpine:latest" "amd64" "vmnet8/nginx:latest" "amd64")
#- echo $flag_amd64
- version2=$(image_version vmnet8/nginx:latest)
- echo "vmnet8 version is $version2"
- echo "$DOCKERPASS" | docker login -u vmnet8 --password-stdin
- docker run --rm --privileged multiarch/qemu-user-static --reset -p yes   # for arm64
- "./docker-build.sh vmnet8/alpine:latest arm"    #Dockerfile base image is arm arch
- "./docker-build.sh vmnet8/alpine:latest arm64"    #Dockerfile base image is arm64 arch
- "./docker-build.sh vmnet8/alpine:latest amd64"    #Dockerfile base image is amd64 arch
- flag=$(compare "vmnet8/alpine@"$alpine_arm_sha "vmnet8/nginx@"$nginx_arm_sha "vmnet8/alpine@"$alpine_amd64_sha "vmnet8/nginx@"$nginx_amd64_sha  "vmnet8/nginx:latest" "vmnet8/nginx-tags:amd64")
- echo $flag
before_deploy:
- timetag=$(date +%Y%m%d%H%M)
- echo $timetag
- tag1="latest"
- tag2=$timetag
- echo $tag2
- create_manifest vmnet8/nginx $tag1 $tag2 vmnet8/nginx-tags:amd64 vmnet8/nginx-tags:arm vmnet8/nginx-tags:arm64
- docker manifest inspect vmnet8/nginx:$tag1
- docker manifest inspect vmnet8/nginx:$tag2
#deploy:
#- provider: script
#  script: docker manifest push vmnet8/nginx:$tag1; docker manifest push vmnet8/nginx:$tag2
#  skip_cleanup: true
#  on:
#    all_branches: true
#    condition: "$flag = true"
env:
  global:
secure: dkfp69KWQ+HTWau1m3+0ArxpK+luZ/r29JxaO8vPCgI1S6Axd8R77HfDhCRh9skb1X3GmRJK0fENKRI/pqQ9Kd97qvFxki7H2ECNWbOSqXc8EaNEObzOsEvtlTbqrTCbI+U5j3VG3fi2t2p31iFghpykOqQHzDyS3PsmgpvYTbZKHxf+fbkbKpUw7jjVr9N99Uls60VRdmUiUU9KPmw9ppcJEsIw1bCP4vtBaBjkyFFcZvR4yXp/xs+3wDdRYGuGJ3LR6BHh5K/tLwBAKvPU5MHz/Sppg4y2kuc/70CwWd/VxdLQvPMhKmA5040pVWV6jcX1JkDzUvN4hWPNJm0n1w8KBJoYAvHjZ53wzHZK8dUlYUsc9IPrQywWYdaDH3Kop7oxlU1UhZXhG3PSQ+kdI/XUiZmCa5BTDKow6LuaEJ85QUKSECSuapXlNYswMX0OV1iefsm24wbkHZEmxPtFIsq/vgylNMygqyVCvRIW8vbiXCvZYENeWYFQZJfWRiMx1DlLw6+NeJYJdXYjFRHgoSPG79GrGdjxxAuhQe7Bu+luuZeayxle3ddwszs1bkEvPsQZBcsqsEk8bZXi3hV4vfktG1aN+yAo7GX24XOeQM/61HRR3JRv/jloAx98WSwE5vpV2BO/yG9BPVwZg0ei+TdzjrYdV8VYHMFC1Pbf+7g=

